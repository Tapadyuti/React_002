{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Practise\\\\ReactMyapp\\\\React_002\\\\React_002\\\\src\\\\component\\\\Counter.js\";\nimport React, { Component } from 'react';\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    };\n  }\n\n  increment() {\n    // this.state.count = this.state.count +1; // on changing value directly whithout setState the value changes in console but wont change in UI\n\n    /* \r\n    this.setState({\r\n        count: this.state.count +1\r\n    }, () =>{console.log(\"count: \"+this.state.count)})\r\n     */\n    //The setState have 2 paramenter one is state and another is call back function which executes after setState 1st paramenter is completed\n    // Whenever we have to check or execute after the setState is used then check or process in 2nd/callBack function not just bellow.\n    console.log(\"count: \" + this.state.count);\n    this.setState(prevState => ({\n      count: prevState + 5\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Count : \", this.state.count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.increment(),\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.incrementFive(),\n        children: \"Increment 5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["E:/Practise/ReactMyapp/React_002/React_002/src/component/Counter.js"],"names":["React","Component","Counter","constructor","props","state","count","increment","console","log","setState","prevState","render","incrementFive"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC5BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACRC,MAAAA,KAAK,EAAE;AADC,KAAb;AAGH;;AAEDC,EAAAA,SAAS,GAAE;AACP;;AACA;AACR;AACA;AACA;AACA;AACQ;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAU,KAAKJ,KAAL,CAAWC,KAAjC;AAEA,SAAKI,QAAL,CAAcC,SAAS,KAAK;AACxBL,MAAAA,KAAK,EAAEK,SAAS,GAAE;AADM,KAAL,CAAvB;AAIH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA,+BAAc,KAAKP,KAAL,CAAWC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKC,SAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKM,aAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAlC2B;;AAqChC,eAAeX,OAAf","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Counter extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             count: 0\r\n        }\r\n    }\r\n\r\n    increment(){\r\n        // this.state.count = this.state.count +1; // on changing value directly whithout setState the value changes in console but wont change in UI\r\n        /* \r\n        this.setState({\r\n            count: this.state.count +1\r\n        }, () =>{console.log(\"count: \"+this.state.count)})\r\n         */\r\n        //The setState have 2 paramenter one is state and another is call back function which executes after setState 1st paramenter is completed\r\n        // Whenever we have to check or execute after the setState is used then check or process in 2nd/callBack function not just bellow.\r\n        console.log(\"count: \"+this.state.count);\r\n\r\n        this.setState(prevState => ({\r\n            count: prevState +5\r\n        }))\r\n\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>Count : {this.state.count}</div>\r\n                <button onClick={() => this.increment()}>Increment</button>\r\n                <button onClick={() => this.incrementFive()}>Increment 5</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Counter\r\n"]},"metadata":{},"sourceType":"module"}